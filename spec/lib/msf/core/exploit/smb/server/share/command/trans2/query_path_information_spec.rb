# -*- coding:binary -*-
require 'spec_helper'

require 'msf/core'
require 'msf/core/exploit/smb/server/share'
require 'rex/proto/smb/constants'

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> pod/metasploit-development-environment
RSpec.describe Msf::Exploit::Remote::SMB::Server::Share do

  include_context "Msf::StringIO"
=======
describe Msf::Exploit::Remote::SMB::Server::Share do
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
<<<<<<< HEAD
RSpec.describe Msf::Exploit::Remote::SMB::Server::Share do

  include_context "Msf::StringIO"
>>>>>>> rapid7/master
=======
RSpec.describe Msf::Exploit::Remote::SMB::Server::Share do

  include_context "Msf::StringIO"
>>>>>>> rapid7/master
=======
RSpec.describe Msf::Exploit::Remote::SMB::Server::Share do

  include_context "Msf::StringIO"
>>>>>>> rapid7/master
=======
RSpec.describe Msf::Exploit::Remote::SMB::Server::Share do

  include_context "Msf::StringIO"
>>>>>>> rapid7/master
=======
describe Msf::Exploit::Remote::SMB::Server::Share do
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment

  subject(:mod) do
    mod = Msf::Exploit.new
    mod.extend described_class
    mod.send(:initialize)

    mod
  end

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> pod/metasploit-development-environment
=======
  let(:client_string) { '' }
  let(:client) { StringIO.new(client_string) }

>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
<<<<<<< HEAD
>>>>>>> rapid7/master
=======
>>>>>>> rapid7/master
=======
>>>>>>> rapid7/master
=======
>>>>>>> rapid7/master
=======
  let(:client_string) { '' }
  let(:client) { StringIO.new(client_string) }

>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment
  let(:valid_query_path_standard_info_params) do
    "\xed\x03\x00\x00\x00\x00\x5c\x00\x74\x00\x65\x00\x73\x00\x74\x00" +
    "\x2e\x00\x65\x00\x78\x00\x65\x00\x00\x00"
  end
  let(:query_path_standard_info_res_length) { 83 }

  let(:valid_query_path_basic_info_params) do
    "\xec\x03\x00\x00\x00\x00\x5c\x00\x74\x00\x65\x00\x73\x00\x74\x00" +
    "\x2e\x00\x65\x00\x78\x00\x65\x00\x00\x00"
  end
  let(:query_path_basic_info_res_length) { 101 }

  let(:non_existent_query_path_basic_info_params) do
    "\xec\x03\x00\x00\x00\x00\x5c\x00\x74\x00\x65\x00\x73\x00\x74\x00" +
    "\x2e\x00\x65\x00\x78\x00\x61\x00\x00\x00"
  end
  let(:not_found_res_length) { 39 }

  before(:each) do
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    msf_io.string = ''
    mod.instance_variable_set('@state', {
      msf_io => {
=======
    mod.instance_variable_set('@state', {
      client => {
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
    msf_io.string = ''
    mod.instance_variable_set('@state', {
      msf_io => {
>>>>>>> rapid7/master
=======
    msf_io.string = ''
    mod.instance_variable_set('@state', {
      msf_io => {
>>>>>>> rapid7/master
=======
    msf_io.string = ''
    mod.instance_variable_set('@state', {
      msf_io => {
>>>>>>> rapid7/master
=======
    msf_io.string = ''
    mod.instance_variable_set('@state', {
      msf_io => {
>>>>>>> rapid7/master
=======
    msf_io.string = ''
    mod.instance_variable_set('@state', {
      msf_io => {
=======
    mod.instance_variable_set('@state', {
      client => {
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
    mod.instance_variable_set('@state', {
      client => {
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment
        :multiplex_id => 0x41424344,
        :process_id   => 0x45464748,
        :file_id      => 0xdead,
        :dir_id       => 0xbeef
      }
    })
    mod.lo = 0
    mod.hi = 0
    mod.share = 'test'
    mod.file_name = 'test.exe'
    mod.file_contents = 'metasploit'
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
=======
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment

    allow_any_instance_of(::StringIO).to receive(:put) do |io, data|
      io.write(data)
    end
<<<<<<< HEAD
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
>>>>>>> rapid7/master
=======
>>>>>>> rapid7/master
=======
>>>>>>> rapid7/master
=======
>>>>>>> rapid7/master
=======
<<<<<<< HEAD
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment
  end

  describe "#smb_cmd_trans2_query_path_information" do

    context "when valid SMB_QUERY_PATH_STANDARD_INFO parameters" do
      it "returns the number of bytes answered" do
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)
        res = msf_io.read
=======
        expect(mod.smb_cmd_trans2_query_path_information(client, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(client, valid_query_path_standard_info_params)
        client.seek(0)
        res = client.read
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
=======
>>>>>>> pod/metasploit-development-environment
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_standard_info_params)
        res = msf_io.read
<<<<<<< HEAD
>>>>>>> rapid7/master
=======
=======
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
        expect(mod.smb_cmd_trans2_query_path_information(client, valid_query_path_standard_info_params)).to eq(query_path_standard_info_res_length)
      end

      it "send SMB_QUERY_PATH_STANDARD_INFO response with the file size" do
        mod.smb_cmd_trans2_query_path_information(client, valid_query_path_standard_info_params)
        client.seek(0)
        res = client.read
<<<<<<< HEAD
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment

        trans2_res = Rex::Proto::SMB::Constants::SMB_TRANS_RES_PKT.make_struct
        trans2_res.from_s(res)
        param_count = trans2_res['Payload'].v['ParamCount']
        data_count = trans2_res['Payload'].v['DataCount']

        data  = trans2_res['Payload'].v['SetupData'][2 + param_count, data_count]
        smb_data = Rex::Proto::SMB::Constants::SMB_QUERY_FILE_STANDARD_INFO_HDR.make_struct
        smb_data.from_s(data)

        expect(smb_data.v['EndOfFile']).to eq(mod.file_contents.length)
      end
    end

    context "when valid SMB_QUERY_PATH_BASIC_INFO parameters" do
      it "returns the number of bytes answered" do
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> pod/metasploit-development-environment
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)).to eq(query_path_basic_info_res_length)
      end

      it "send SMB_QUERY_PATH_BASIC_INFO response with the file attributes" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)
        res = msf_io.read
=======
<<<<<<< HEAD
=======
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment
        expect(mod.smb_cmd_trans2_query_path_information(client, valid_query_path_basic_info_params)).to eq(query_path_basic_info_res_length)
      end

      it "send SMB_QUERY_PATH_BASIC_INFO response with the file attributes" do
        mod.smb_cmd_trans2_query_path_information(client, valid_query_path_basic_info_params)
        client.seek(0)
        res = client.read
<<<<<<< HEAD
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)).to eq(query_path_basic_info_res_length)
      end

      it "send SMB_QUERY_PATH_BASIC_INFO response with the file attributes" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)).to eq(query_path_basic_info_res_length)
      end

      it "send SMB_QUERY_PATH_BASIC_INFO response with the file attributes" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)).to eq(query_path_basic_info_res_length)
      end

      it "send SMB_QUERY_PATH_BASIC_INFO response with the file attributes" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)).to eq(query_path_basic_info_res_length)
      end

      it "send SMB_QUERY_PATH_BASIC_INFO response with the file attributes" do
        mod.smb_cmd_trans2_query_path_information(msf_io, valid_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
<<<<<<< HEAD
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment

        trans2_res = Rex::Proto::SMB::Constants::SMB_TRANS_RES_PKT.make_struct
        trans2_res.from_s(res)
        param_count = trans2_res['Payload'].v['ParamCount']
        data_count = trans2_res['Payload'].v['DataCount']

        data  = trans2_res['Payload'].v['SetupData'][2 + param_count, data_count]
        smb_data = Rex::Proto::SMB::Constants::SMB_QUERY_FILE_BASIC_INFO_HDR.make_struct
        smb_data.from_s(data)

        expect(smb_data.v['ExtFileAttributes']).to eq(0x80)
      end
    end

    context "when non existent file SMB_QUERY_PATH_BASIC_INFO parameters" do
      it "returns the number of bytes answered" do
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)
        res = msf_io.read
=======
        expect(mod.smb_cmd_trans2_query_path_information(client, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(client, non_existent_query_path_basic_info_params)
        client.seek(0)
        res = client.read
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)
        res = msf_io.read
>>>>>>> rapid7/master
=======
=======
>>>>>>> pod/metasploit-development-environment
        expect(mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(msf_io, non_existent_query_path_basic_info_params)
        res = msf_io.read
<<<<<<< HEAD
>>>>>>> rapid7/master
=======
=======
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
        expect(mod.smb_cmd_trans2_query_path_information(client, non_existent_query_path_basic_info_params)).to eq(not_found_res_length)
      end

      it "send TRANS2 response with error" do
        mod.smb_cmd_trans2_query_path_information(client, non_existent_query_path_basic_info_params)
        client.seek(0)
        res = client.read
<<<<<<< HEAD
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
=======
>>>>>>> origin/chore/MSP-12110/celluloid-supervision-tree
>>>>>>> pod/metasploit-development-environment

        trans2_res = Rex::Proto::SMB::Constants::SMB_TRANS_RES_PKT.make_struct
        trans2_res.from_s(res)

        expect(trans2_res['Payload']['SMB'].v['ErrorClass']).to eq(Rex::Proto::SMB::Constants::SMB_STATUS_OBJECT_NAME_NOT_FOUND)
      end
    end
  end

end


